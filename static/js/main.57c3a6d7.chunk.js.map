{"version":3,"sources":["styles/style.js","styles/home.style.js","components/Home.js","styles/exampleTwoDeepComponent.style.js","components/ExampleTwoDeepComponent.js","styles/pageNotFound.style.js","components/PageNotFound.js","styles/exampleComponent.style.js","components/ExampleComponent.js","components/Breadcrumbs.js","styles/app.style.js","serviceWorker.js","index.js","App.js"],"names":["link","normal","borderBottom","hover","color","active","touchActive","focusFromTab","outline","outlineOffset","touchActiveTapOnly","childLink","Object","keys","forEach","key","concat","slice","toUpperCase","style","p","margin","lineHeight","Code","_ref","children","react_default","a","createElement","fontFamily","fontSize","paddingLeft","Li","_ref2","rest","objectWithoutProperties","assign","textIndent","listStyle","paddingRight","s","create","pageLinkContainer","Home","style_Code","Link","to","lineContainer","ExampleTwoDeepComponent","location","queryPresent","search","hashPresent","hash","replace","split","map","fvPair","pair","join","index","style_Li","PageNotFound","pathname","ExamplePageText","ExampleComponent","Switch","Route","exact","path","render","ExampleComponent_ExamplePageText","component","breadCrumbTitles","","example","two-deep","BreadcrumbsItem","match","title","url","undefined","isExact","Breadcrumbs","root","fontWeight","letterSpacing","padding","width","maxWidth","position","left","WebkitTransform","MozTransform","msTransform","OTransform","transform","WebkitTextSizeAdjust","MozTextSizeAdjust","msTextSizeAdjust","textSizeAdjust","marginBottom","repoLink","breadcrumbs","creditLine","marginTop","Boolean","window","hostname","ReactDOM","BrowserRouter","basename","process","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.57c3a6d7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst link = {\n  normal: {\n    borderBottom: '1px dotted rgb(0, 168, 0)',\n  },\n  hover: {\n    borderBottom: '1px solid rgb(0, 168, 0)',\n    color: 'black',\n  },\n  active: 'hover',\n  touchActive: {\n    borderBottom: '1px dashed rgb(0, 168, 0)',\n    color: 'black',\n  },\n  focusFromTab: {\n    outline: '2px solid rgb(0, 152, 0)',\n    outlineOffset: '2px',\n    color: 'black',\n  },\n  touchActiveTapOnly: true,\n};\n\nconst childLink = {};\nObject.keys(link).forEach((key) => {\n  if (key !== 'touchActiveTapOnly') {\n    childLink[`onParent${key.slice(0, 1).toUpperCase()}${key.slice(1)}`] = link[key];\n  }\n});\n\nexport default {\n  link,\n  childLink,\n  p: {\n    margin: '3vh 0',\n    lineHeight: '1.4',\n  },\n};\n\nexport const Code = ({ children }) => (\n  <code\n    style={{\n      fontFamily: 'monospace',\n      fontSize: '15px',\n      paddingLeft: '2px',\n    }}\n  >{children}</code>\n);\n\nCode.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n\nexport const Li = ({ children, ...rest }) => (\n  <li\n    style={{\n      paddingLeft: '18px',\n      textIndent: '-15px',\n      margin: '0.5vh 0',\n      listStyle: 'none',\n    }}\n    {...rest}\n  >\n    <span style={{ paddingRight: '7px' }}>&ndash;</span>\n    {children}\n  </li>\n);\n\nLi.propTypes = {\n  children: PropTypes.string.isRequired,\n};\n","import style from './style';\n\nconst s = Object.create(style);\n\ns.pageLinkContainer = {\n  margin: '1vh 0',\n};\n\nexport default s;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Code } from '../styles/style';\nimport s from '../styles/home.style';\n\nexport default function Home() {\n\n  return (\n    <div>\n      <p style={s.p}>\n        This is an example single page app built\n        with React and React&nbsp;Router using {' '}\n        <Code>BrowserRouter</Code>. Navigate with the links below and\n        refresh the page or copy/paste the url to test out the redirect\n        functionality deployed to overcome GitHub&nbsp;Pages incompatibility\n        with single page apps (like this one).\n      </p>\n      <p style={s.p}>\n        Please see the for instructions on how to\n        use this boilerplate to deploy your own single page app using GitHub Pages.\n      </p>\n      <Link to=\"/example\">Example</Link>\n      <Link to=\"/example\">Example</Link>\n      <div style={s.pageLinkContainer}>\n      </div>\n      <div style={s.pageLinkContainer}>\n      </div>\n    </div>\n  );\n}\n","import style from './style';\n\nconst s = Object.create(style);\n\ns.lineContainer = {\n  margin: '3vh 0',\n};\n\nexport default s;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Li } from '../styles/style';\nimport s from '../styles/exampleTwoDeepComponent.style';\n\nconst propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default function ExampleTwoDeepComponent({ location }) {\n  const queryPresent = location.search !== '';\n  const hashPresent = location.hash !== '';\n\n  function queryStringTitle() {\n    if (queryPresent) return 'The query string field-value pairs are:';\n    return 'No query string in the url';\n  }\n\n  function hashFragmentTitle() {\n    if (hashPresent) return 'The hash fragment is:';\n    return 'No hash fragment in the url';\n  }\n\n  function linkToShowQueryAndOrHash() {\n    if (queryPresent && hashPresent) return null;\n\n    const queryString = (queryPresent ? location.search : '?field1=foo&field2=bar');\n    const hashFragment = (hashPresent ? location.hash : '#boom!');\n\n    let linkText = '';\n    if (queryPresent && !hashPresent) linkText = 'Show with hash fragment';\n    if (!queryPresent && hashPresent) linkText = 'Show with query string';\n    if (!queryPresent && !hashPresent) linkText = 'Show with query string and hash fragment';\n\n    return (\n      <div style={s.lineContainer}>\n      </div>\n    );\n  }\n\n  function parseQueryString() {\n    if (!queryPresent) return [];\n    return location.search\n      .replace('?', '')\n      .split('&')\n      .map(fvPair => fvPair.split('='))\n      .map(pair => [pair[0], pair.slice(1).join('=')]);\n  }\n\n  return (\n    <div>\n      <div style={s.lineContainer}>\n        <div>{queryStringTitle()}</div>\n        <ul>\n          {\n            parseQueryString().map((pair, index) => (\n              <Li key={`${pair[0]}${pair[1]}${index}`}>{`${pair[0]}: ${pair[1]}`}</Li>\n            ))\n          }\n        </ul>\n      </div>\n      <div style={s.lineContainer}>\n        <div>{hashFragmentTitle()}</div>\n        <ul>\n          {hashPresent && <Li>{location.hash.slice(1)}</Li>}\n        </ul>\n      </div>\n      {linkToShowQueryAndOrHash()}\n    </div>\n  );\n}\n\nExampleTwoDeepComponent.propTypes = propTypes;\n","import style from './style';\n\nconst s = Object.create(style);\n\nexport default s;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Code } from '../styles/style';\nimport s from '../styles/pageNotFound.style';\n\nconst propTypes = {\n  location: PropTypes.object.isRequired,\n};\n\nexport default function PageNotFound({ location }) {\n  return (\n    <p style={s.p}>\n      Page not found - the path, <Code>{location.pathname}</Code>,\n      did not match any React Router routes.\n    </p>\n  );\n}\n\nPageNotFound.propTypes = propTypes;\n","import style from './style';\n\nconst s = Object.create(style);\n\ns.pageLinkContainer = {\n  margin: '1vh 0',\n};\n\nexport default s;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport ExampleTwoDeepComponent from './ExampleTwoDeepComponent';\nimport PageNotFound from './PageNotFound';\nimport s from '../styles/exampleComponent.style';\n\nconst ExamplePageText = () => (\n  <p style={s.p}>\n    This is an example page. Refresh the page or copy/paste the url to\n    test out the redirect functionality (this same page should load\n      after the redirect).\n  </p>\n);\n\nexport default function ExampleComponent() {\n  return (\n    <Switch>\n      <Route\n        exact path=\"/example/two-deep\"\n        render={({ location }) => (\n          <div>\n            <ExamplePageText />\n            <ExampleTwoDeepComponent location={location} />\n          </div>\n        )}\n      />\n      <Route\n        exact path=\"/example\"\n        render={() => (\n          <div>\n            <ExamplePageText />\n            <div style={s.pageLinkContainer}>\n            </div>\n          </div>\n        )}\n      />\n      <Route component={PageNotFound} />\n    </Switch>\n  );\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport s from '../styles/style';\r\n\r\nconst breadCrumbTitles = {\r\n  '': 'Home',\r\n  example: 'Example',\r\n  'two-deep': 'Two Deep',\r\n};\r\n\r\nfunction BreadcrumbsItem({ match }) {\r\n  const title = breadCrumbTitles[match.url.split('/').slice(-1)];\r\n  const to = title === undefined ? '/' : match.url;\r\n\r\n  return (\r\n    <span>\r\n      <Link\r\n        {...s.link}\r\n        to={to}\r\n      >\r\n        {title || 'Page Not Found'}\r\n      </Link>\r\n      {!match.isExact && title && ' / '}\r\n      {title &&\r\n        <Route path={`${match.url === '/' ? '' : match.url}/:path`} component={BreadcrumbsItem} />\r\n      }\r\n    </span>\r\n  );\r\n}\r\n\r\nBreadcrumbsItem.propTypes = {\r\n  match: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function Breadcrumbs() {\r\n  return (\r\n    <Route path=\"/\" component={BreadcrumbsItem} />\r\n  );\r\n}","import style from './style';\n\nconst s = Object.create(style);\n\ns.root = {\n  fontFamily: 'helvetica, sans-serif',\n  fontWeight: '300',\n  fontSize: '16px',\n  letterSpacing: '0.025em',\n  padding: '3vh 0 12vh 0',\n  width: '500px',\n  // use responsive max-width to simulate padding/margin to allow\n  // space for vertical scroll bar without creating horizontal scroll bar\n  // (if there is padding, the window will scroll horizontally to show the padding)\n  maxWidth: 'calc(100vw - 40px)',\n\n  // center based on vw to prevent content jump when vertical scroll bar show/hide\n  // note: vw/vh include the width of scroll bars. Note that centering using margin auto\n  // or % (which doesn't include scroll bars, so changes when scroll bars shown) causes a page jump\n  position: 'relative',\n  left: '50vw',\n  WebkitTransform: 'translate(-50%, 0)',\n  MozTransform: 'translate(-50%, 0)',\n  msTransform: 'translate(-50%, 0)',\n  OTransform: 'translate(-50%, 0)',\n  transform: 'translate(-50%, 0)',\n\n  WebkitTextSizeAdjust: 'none',\n  MozTextSizeAdjust: 'none',\n  msTextSizeAdjust: 'none',\n  textSizeAdjust: 'none',\n};\n\ns.title = {\n  fontSize: '20px',\n  marginBottom: '0.5vh',\n};\n\ns.repoLink = {\n  fontSize: '14px',\n};\n\ns.breadcrumbs = {\n  margin: '3vh 0',\n};\n\ns.creditLine = {\n  color: '#A0A0A0',\n  fontSize: '14px',\n  marginTop: '50px',\n};\n\nexport default s;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <App />\n    </BrowserRouter>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Home from 'components/Home';\nimport ExampleComponent from 'components/ExampleComponent';\nimport PageNotFound from 'components/PageNotFound';\nimport Breadcrumbs from 'components/Breadcrumbs';\nimport s from 'styles/app.style';\n\nexport default function App() {\n  return (\n    <div style={s.root}>\n      <h1 style={s.title}>Single Page Apps for GitHub Pages</h1>\n      <nav style={s.breadcrumbs}>\n        <Breadcrumbs />\n      </nav>\n\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/example\" component={ExampleComponent} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}"],"sourceRoot":""}